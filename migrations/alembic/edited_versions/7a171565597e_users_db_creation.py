"""empty message

Revision ID: 7a171565597e
Revises: 
Create Date: 2025-02-03 21:36:54.092526

"""

from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import mysql

# revision identifiers, used by Alembic.
revision: str = "7a171565597e"
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:

    op.create_table(
        "courses",
        sa.Column("id", mysql.BIGINT(), nullable=False),
        sa.Column("name", sa.String(length=255), nullable=True),
        sa.Column("university", sa.String(length=255), nullable=True),
        sa.Column("university_course_id", sa.String(length=255), nullable=True),
        sa.Column("description", sa.String(length=255), nullable=True),
        sa.Column("active", sa.Boolean(), nullable=True),
        sa.Column("deleted", sa.Boolean(), nullable=True),
        sa.Column("semester", sa.String(length=255), nullable=True),
        sa.Column("semester_start_date", sa.DateTime(), nullable=True),
        sa.Column("semester_END_date", sa.DateTime(), nullable=True),
        sa.Column("img_uri", sa.String(length=255), nullable=True),
        sa.Column("date_created", sa.DateTime(), nullable=True),
        sa.Column("last_updated", sa.DateTime(), nullable=True),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "permissions",
        sa.Column("id", mysql.BIGINT(), nullable=False),
        sa.Column("name", sa.String(length=50), nullable=True),
        sa.Column("date_created", sa.DateTime(), nullable=True),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "roles",
        sa.Column("id", mysql.BIGINT(), nullable=False),
        sa.Column("name", sa.String(length=50), nullable=True),
        sa.Column("permissions", sa.String(length=1000), nullable=True),
        sa.Column("date_created", sa.DateTime(), nullable=True),
        sa.Column("last_updated", sa.DateTime(), nullable=True),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "users",
        sa.Column("id", mysql.BIGINT(), nullable=False),
        sa.Column("name", sa.String(length=255), nullable=True),
        sa.Column("surname", sa.String(length=255), nullable=True),
        sa.Column("student_id", sa.String(length=255), nullable=True),
        sa.Column("username", sa.String(length=255), nullable=False),
        sa.Column("email", sa.String(length=255), nullable=False),
        sa.Column("password", sa.String(length=255), nullable=False),
        sa.Column("email_validated", sa.Boolean(), nullable=False),
        sa.Column("is_admin", sa.Boolean(), nullable=True),
        sa.Column("degree", sa.String(length=255), nullable=True),
        sa.Column("university", sa.String(length=255), nullable=True),
        sa.Column("date_created", sa.DateTime(), nullable=True),
        sa.Column("last_updated", sa.DateTime(), nullable=True),
        sa.Column("img_uri", sa.String(length=255), nullable=True),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("email"),
        sa.UniqueConstraint("username"),
    )
    op.create_table(
        "course_users",
        sa.Column("id", mysql.BIGINT(), nullable=False),
        sa.Column("course_id", mysql.BIGINT(), nullable=True),
        sa.Column("user_id", mysql.BIGINT(), nullable=True),
        sa.Column("role_id", mysql.BIGINT(), nullable=True),
        sa.Column("accepted", sa.Boolean(), nullable=True),
        sa.Column("date_created", sa.DateTime(), nullable=True),
        sa.Column("last_updated", sa.DateTime(), nullable=True),
        sa.ForeignKeyConstraint(
            ["course_id"],
            ["courses.id"],
        ),
        sa.ForeignKeyConstraint(
            ["role_id"],
            ["roles.id"],
        ),
        sa.ForeignKeyConstraint(
            ["user_id"],
            ["users.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "validation_token",
        sa.Column("id", mysql.BIGINT(), nullable=False),
        sa.Column("user_id", mysql.BIGINT(), nullable=True),
        sa.Column("token", sa.String(length=255), nullable=True),
        sa.Column("expiry_date", sa.DateTime(), nullable=True),
        sa.ForeignKeyConstraint(
            ["user_id"],
            ["users.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table("validation_token")
    op.drop_table("course_users")
    op.drop_table("users")
    op.drop_table("roles")
    op.drop_table("permissions")
    op.drop_table("courses")
    # ### end Alembic commands ###
