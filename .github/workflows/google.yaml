name: Build and Deploy to GKE

on:
  workflow_dispatch:
  push:
    branches: [ master, test/** ]
  schedule:
    - cron: "00 12 1 * *"

env:
  GKE_PROJECT: ${{ secrets.GKE_PROJECT }}
  GKE_EMAIL: ${{ secrets.GKE_EMAIL }}
  GITHUB_SHA: ${{ github.sha }}
  GKE_ZONE: us-central1-c
  GKE_CLUSTER: rpl3
  IMAGE_USERS_API: rpl-3.0-users
  IMAGE_ACTIVITIES_API: rpl-3.0-activities
  REGISTRY_HOSTNAME: gcr.io
  DEPLOYMENT_NAME_USERS_API: users-api
  DEPLOYMENT_NAME_ACTIVITIES_API: activities-api
  NEW_RELIC_LICENSE_KEY: ${{ secrets.NEW_RELIC_LICENSE_KEY }}

jobs:
  test:
    name: Run Python Tests
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python 3.13
        uses: actions/setup-python@v5
        with:
          python-version: '3.13'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r base_requirements.txt
          pip install -r rpl_activities/extra_requirements.txt
          pip install -r rpl_users/extra_requirements.txt

      - name: Run tests
        run: pytest

  setup-build-publish-deploy:
    name: Setup, Build, Publish, and Deploy
    runs-on: ubuntu-latest
    needs: test
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      # Setup gcloud CLI
      - uses: google-github-actions/auth@v2
        with:
          credentials_json: '${{ secrets.GCP_CREDENTIALS }}'

      - uses: 'google-github-actions/get-gke-credentials@v2'
        with:
          cluster_name: ${{ env.GKE_CLUSTER }}
          location: ${{ env.GKE_ZONE }}
          project_id: ${{ env.GKE_PROJECT }}

      - name: Configure Docker for gcloud
        run: gcloud auth configure-docker

      - name: Build Users API Docker image
        run: |
          docker build -t "$REGISTRY_HOSTNAME"/"$GKE_PROJECT"/"$IMAGE_USERS_API":"$GITHUB_SHA" \
            -t "$REGISTRY_HOSTNAME"/"$GKE_PROJECT"/"$IMAGE_USERS_API":latest \
            --build-arg GITHUB_SHA="$GITHUB_SHA" \
            --build-arg GITHUB_REF="$GITHUB_REF" .

      - name: Build Activities API Docker image
        run: |
          docker build -t "$REGISTRY_HOSTNAME"/"$GKE_PROJECT"/"$IMAGE_ACTIVITIES_API":"$GITHUB_SHA" \
            -t "$REGISTRY_HOSTNAME"/"$GKE_PROJECT"/"$IMAGE_ACTIVITIES_API":latest \
            --build-arg GITHUB_SHA="$GITHUB_SHA" \
            --build-arg GITHUB_REF="$GITHUB_REF" .

      - name: Push Users API Docker image
        run: docker push -a $REGISTRY_HOSTNAME/$GKE_PROJECT/$IMAGE_USERS_API

      - name: Push Activities API Docker image
        run: docker push -a $REGISTRY_HOSTNAME/$GKE_PROJECT/$IMAGE_ACTIVITIES_API

      - name: Set up Kustomize
        run: |
          sudo apt-get update && sudo apt-get install -y kustomize

      - name: Deploy Users API to GKE
        run: |
          cd kubernetes
          kustomize edit set image $REGISTRY_HOSTNAME/$GKE_PROJECT/$IMAGE_USERS_API:${GITHUB_SHA}
          kustomize build . | kubectl apply -f -
          kubectl rollout status deployment/$DEPLOYMENT_NAME_USERS_API
          kubectl get services -o wide

      - name: Deploy Activities API to GKE
        run: |
          cd kubernetes
          kustomize edit set image $REGISTRY_HOSTNAME/$GKE_PROJECT/$IMAGE_ACTIVITIES_API:${GITHUB_SHA}
          kustomize build . | kubectl apply -f -
          kubectl rollout status deployment/$DEPLOYMENT_NAME_ACTIVITIES_API
          kubectl get services -o wide